<?php
/**
 *  _____    ____    ____   __  __  __  ______
 * |  __ \  / __ \  / __ \ |  \/  |/_ ||____  |
 * | |__) || |  | || |  | || \  / | | |    / /
 * |  _  / | |  | || |  | || |\/| | | |   / /
 * | | \ \ | |__| || |__| || |  | | | |  / /
 * |_|  \_\ \____/  \____/ |_|  |_| |_| /_/
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 */

declare(strict_types=1);

namespace room17\SkyBlock;

use pocketmine\item\Item;
use pocketmine\level\Position;
use pocketmine\plugin\PluginBase;
use pocketmine\Server;
use pocketmine\utils\TextFormat;
use room17\SkyBlock\command\IsleCommandMap;
use room17\SkyBlock\generator\IsleGeneratorManager;
use room17\SkyBlock\isle\IsleManager;
use room17\SkyBlock\provider\json\JSONProvider;
use room17\SkyBlock\provider\Provider;
use room17\SkyBlock\session\SessionManager;

class SkyBlock extends PluginBase {

    /** @var SkyBlock */
    private static $object = null;

    /** @var SkyBlockSettings */
    private $settings;
    
    /** @var Provider */
    private $provider;
    
    /** @var SessionManager */
    private $sessionManager;
    
    /** @var IsleManager */
    private $isleManager;
    
    /** @var IsleCommandMap */
    private $commandMap;
    
    /** @var IsleGeneratorManager */
    private $generatorManager;
    
    /** @var SkyBlockListener */
    private $eventListener;
    
    public function onLoad(): void {
        self::$object = $this;
        if(!is_dir($this->getDataFolder())) {
            mkdir($this->getDataFolder());
        }
        $this->saveResource("messages.json");
        $this->saveResource("settings.json");
    }

    public function onEnable(): void {
        $this->settings = new SkyBlockSettings($this);
        $this->provider = new JSONProvider($this);
        $this->sessionManager = new SessionManager($this);
        $this->isleManager = new IsleManager($this);
        $this->generatorManager = new IsleGeneratorManager($this);
        $this->commandMap = new IsleCommandMap($this);
        $this->eventListener = new SkyBlockListener($this);
        if($this->getServer()->getSpawnRadius() > 0) {
            $this->getLogger()->warning("Please, disable the spawn protection on your server.properties, otherwise SkyBlock won't work correctly");
        }
        $this->getLogger()->info("SkyBlock was enabled");
    }

    public function onDisable(): void {
        foreach($this->isleManager->getIsles() as $isle) {
            $isle->save();
        }
        $this->getLogger()->info("SkyBlock was disabled");
    }

    /**
     * @return SkyBlock
     */
    public static function getInstance(): SkyBlock {
        return self::$object;
    }
    
    /**
     * @return SkyBlockSettings
     */
    public function getSettings(): SkyBlockSettings {
        return $this->settings;
    }
    
    /**
     * @return Provider
     */
    public function getProvider(): Provider {
        return $this->provider;
    }
    
    /**
     * @return SessionManager
     */
    public function getSessionManager(): SessionManager {
        return $this->sessionManager;
    }
    
    /**
     * @return IsleManager
     */
    public function getIsleManager(): IsleManager {
        return $this->isleManager;
    }

    /**
     * @return IsleGeneratorManager
     */
    public function getGeneratorManager(): IsleGeneratorManager {
        return $this->generatorManager;
    }
    
    /**
     * @param Position $position
     * @return string
     */
    public static function writePosition(Position $position): string {
        return "{$position->getLevel()->getName()},{$position->getX()},{$position->getY()},{$position->getZ()}";
    }
    
    /**
     * @param string $position
     * @return null|Position
     */
    public static function parsePosition(string $position): ?Position {
        $array = explode(",", $position);
        if(isset($array[3])) {
            $level = Server::getInstance()->getLevelByName($array[0]);
            if($level != null) {
                return new Position((float) $array[1],(float) $array[2],(float) $array[3], $level);
            }
        }
        return null;
    }
    
    /**
     * Parse an Item
     *
     * @param string $item
     * @return null|Item
     */
    public static function parseItem(string $item): ?Item {
        $parts = explode(",", $item);
        foreach($parts as $key => $value) {
            $parts[$key] = (int) $value;
        }
        if(isset($parts[0])) {
            return Item::get($parts[0], $parts[1] ?? 0, $parts[2] ?? 1);
        }
        return null;
    }
    
    /**
     * @param array $items
     * @return array
     */
    public static function parseItems(array $items): array {
        $result = [];
        foreach($items as $item) {
            $item = self::parseItem($item);
            if($item != null) {
                $result[] = $item;
            }
        }
        return $result;
    }
    
    /**
     * @param string $message
     * @return string
     */
    public static function translateColors(string $message): string {
        $message = str_replace("&", TextFormat::ESCAPE, $message);
        $message = str_replace("{BLACK}", TextFormat::BLACK, $message);
        $message = str_replace("{DARK_BLUE}", TextFormat::DARK_BLUE, $message);
        $message = str_replace("{DARK_GREEN}", TextFormat::DARK_GREEN, $message);
        $message = str_replace("{DARK_AQUA}", TextFormat::DARK_AQUA, $message);
        $message = str_replace("{DARK_RED}", TextFormat::DARK_RED, $message);
        $message = str_replace("{DARK_PURPLE}", TextFormat::DARK_PURPLE, $message);
        $message = str_replace("{ORANGE}", TextFormat::GOLD, $message);
        $message = str_replace("{GRAY}", TextFormat::GRAY, $message);
        $message = str_replace("{DARK_GRAY}", TextFormat::DARK_GRAY, $message);
        $message = str_replace("{BLUE}", TextFormat::BLUE, $message);
        $message = str_replace("{GREEN}", TextFormat::GREEN, $message);
        $message = str_replace("{AQUA}", TextFormat::AQUA, $message);
        $message = str_replace("{RED}", TextFormat::RED, $message);
        $message = str_replace("{LIGHT_PURPLE}", TextFormat::LIGHT_PURPLE, $message);
        $message = str_replace("{YELLOW}", TextFormat::YELLOW, $message);
        $message = str_replace("{WHITE}", TextFormat::WHITE, $message);
        $message = str_replace("{OBFUSCATED}", TextFormat::OBFUSCATED, $message);
        $message = str_replace("{BOLD}", TextFormat::BOLD, $message);
        $message = str_replace("{STRIKETHROUGH}", TextFormat::STRIKETHROUGH, $message);
        $message = str_replace("{UNDERLINE}", TextFormat::UNDERLINE, $message);
        $message = str_replace("{ITALIC}", TextFormat::ITALIC, $message);
        $message = str_replace("{RESET}", TextFormat::RESET, $message);
        return $message;
    }
    
    /**
     * @return string
     */
    public static function generateUniqueId(): string {
        return "is-" . microtime();
    }
    
}{
  "MUST_BE_MEMBER": "{YELLOW}You must be part of this island to do this!",
  "TRY_USING_HELP": "{GREEN}You don't know how to use SkyBlock commands?\n{GREEN}Take a look at: {WHITE}/is help",
  "HELP_USAGE": "Usage: /is help",
  "HELP_DESCRIPTION": "Provides information about available commands",
  "HELP_HEADER": "{RED}___ {WHITE}Command Information {RED}___",
  "HELP_COMMAND_TEMPLATE": "{GREEN}/is {name}: {WHITE}{description}",
  "NEED_ISLAND": "{YELLOW}You must be part of an island to do this!",
  "NEED_TO_BE_FREE": "{YELLOW}You can't do this if you're part of a island!",
  "SUCCESSFULLY_CREATED_A_ISLAND": "{GREEN}You successfully created a island!",
  "TELEPORTED_TO_ISLAND": "{GREEN}You've been teleported to your island!",
  "CREATE_USAGE": "Usage: /is create [generator = Shelly]",
  "CREATE_DESCRIPTION": "Generates a new island",
  "JOIN_USAGE": "Usage: /is join",
  "JOIN_DESCRIPTION": "Teleports you to your island",
  "MUST_BE_LEADER": "{YELLOW}You must be a leader to do this!",
  "MUST_BE_FOUNDER": "{YELLOW}You must be the founder to do this!",
  "MUST_BE_OFFICER": "{YELLOW}You must be a officer to do this!",
  "LOCK_USAGE": "Usage: /is lock",
  "LOCK_DESCRIPTION": "Lock or unlock your island. If your island is locked, nobody other than the members will be able to visit it.",
  "ISLAND_LOCKED": "{GREEN}You successfully locked your island!",
  "ISLAND_UNLOCKED": "{GREEN}You successfully unlocked your island!",
  "CHAT_USAGE": "Usage: /is chat",
  "CHAT_DESCRIPTION": "Switch your chat room between the global chat and your island's chat room",
  "JOINED_ISLAND_CHAT": "{RED}> {WHITE}You joined your island's chat room!",
  "JOINED_GLOBAL_CHAT": "{RED}> {WHITE}You joined global chat room!",
  "VISIT_USAGE": "Usage: /is visit <player>",
  "VISIT_DESCRIPTION": "Lets you visit an island if it's not locked",
  "HE_DO_NOT_HAVE_AN_ISLAND": "{name} {YELLOW}doesn't have an island!",
  "VISITING_ISLAND": "{GREEN}You're visiting {WHITE}{name}{GREEN}'s island!",
  "HIS_ISLAND_IS_LOCKED": "{name}{YELLOW}'s island is locked! :(",
  "LEAVE_USAGE": "Usage: /is leave",
  "LEAVE_DESCRIPTION": "Leave your current island",
  "FOUNDER_CANNOT_LEAVE": "{YELLOW}The founder can't leave the island!\n{YELLOW}If you want to leave your island, {RED}you'll have to disband it",
  "LEFT_ISLAND": "{GREEN}You successfully left your island!",
  "MEMBERS_COMMAND_HEADER": "{RED}__{WHITE}Members ({amount}){RED}__",
  "ONLINE_MEMBER": "{BOLD}{GREEN}ONLINE{RESET} {WHITE}{name}",
  "OFFLINE_MEMBER": "{BOLD}{RED}OFFLINE{RESET} {WHITE}{name}",
  "MEMBERS_USAGE": "Usage: /is members",
  "MEMBERS_DESCRIPTION": "Show all the members of a island",
  "NOT_ONLINE_PLAYER": "{name} {YELLOW}is not an online player!",
  "CANT_BE_YOURSELF": "{YELLOW}You can't do this to yourself!",
  "CANNOT_INVITE_BECAUSE_HAS_ISLAND": "{YELLOW}Cannot invite {WHITE}{name} {YELLOW}because he is already part of an island!",
  "YOU_WERE_INVITED_TO_AN_ISLAND": "{RED}> {BOLD}{WHITE}You were invited to {GREEN}{name}'s {WHITE}island!\n{GRAY}* Type {WHITE}/is accept {name} {GRAY}to accept it",
  "SUCCESSFULLY_INVITED": "{GREEN}You successfully invited {WHITE}{name} {GREEN}to your island!",
  "INVITE_USAGE": "Usage: /is invite <player>",
  "INVITE_DESCRIPTION": "Invites a player to your island",
  "PLAYER_JOINED_THE_ISLAND": "{RED}{BOLD}> {WHITE}{name} {GREEN}joined the island!",
  "ACCEPT_USAGE": "Usage: /is accept [invitation=last invitation]",
  "ACCEPT_DESCRIPTION": "Accepts an invitation to join an island",
  "DENY_USAGE": "Usage: /is accept [invitation=last invitation]",
  "DENY_DESCRIPTION": "Denies an invitation to join an island",
  "NOT_VALID_GENERATOR": "{WHITE}{name} {YELLOW}is not a valid island generator!",
  "ISLAND_DISBANDED": "{YELLOW}{BOLD}Your island was disbanded!",
  "DISBAND_DESCRIPTION": "Removes your island",
  "DISBAND_USAGE": "Usage: /is disband",
  "KICK_USAGE": "Usage: /is kick <player>",
  "KICK_DESCRIPTION": "Kicks a player from your island",
  "KICKED_FROM_THE_ISLAND": "{YELLOW}You've been kicked from the island!",
  "YOU_KICKED_A_PLAYER": "{GREEN}You successfully kicked {WHITE}{name} {GREEN}from your island",
  "CANNOT_KICK_A_MEMBER": "{YELLOW}You cannot kick a member of your island!",
  "NOT_A_VISITOR": "{WHITE}{name} {GREEN}is not in your island right now!",
  "FIRE_USAGE": "Usage: /is fire <player>",
  "FIRE_DESCRIPTION": "Fires a member from your island!",
  "MUST_BE_PART_OF_YOUR_ISLAND": "{WHITE}{name} {YELLOW}must be part of your island to do this!",
  "CANNOT_FIRE_FOUNDER": "{YELLOW}You cannot fire the founder of the island!",
  "SUCCESSFULLY_FIRED": "{GREEN}You successfully fired {WHITE}{name}{GREEN}!",
  "YOU_HAVE_BEEN_FIRED": "{YELLOW}You have been fired from your island!",
  "PROMOTE_USAGE": "Usage: /is promote <player>",
  "PROMOTE_DESCRIPTION": "Promotes a player to a higher rank",
  "YOU_HAVE_BEEN_PROMOTED": "{GREEN}You have been promoted!",
  "CANNOT_PROMOTE_LEADER": "{WHITE}{name} {YELLOW}already has the highest rank!",
  "OFFICER": "officer",
  "LEADER": "leader",
  "MEMBER": "member",
  "SUCCESSFULLY_PROMOTED_PLAYER": "{WHITE}{name} {GREEN}was promoted to {WHITE}{to}",
  "DEMOTE_USAGE": "Usage: /is demote <player>",
  "DEMOTE_DESCRIPTION": "Demotes a player to a lower rank",
  "CANNOT_DEMOTE_MEMBER": "{WHITE}{name} {YELLOW}already has the lowest rank!",
  "CANNOT_DEMOTE_FOUNDER": "{YELLOW}You cannot demote the founder of the island!",
  "YOU_HAVE_BEEN_DEMOTED": "{YELLOW}You have been demoted!",
  "SUCCESSFULLY_DEMOTED_PLAYER": "{WHITE}{name} {GREEN}was demoted to {WHITE}{to}",
  "SET_SPAWN_USAGE": "Usage: /is setspawn",
  "SET_SPAWN_DESCRIPTION": "Sets island spawn",
  "MUST_BE_IN_YOUR_ISLAND": "{YELLOW}You must be on your island to do this!",
  "SUCCESSFULLY_SET_SPAWN": "{GREEN}You successfully updated your island spawn!",
  "TRANSFER_USAGE": "Usage: /is transfer <player>",
  "TRANSFER_DESCRIPTION": "Transfers your island to other player",
  "RANK_TRANSFERRED": "{GREEN}You successfully transferred your rank to {WHITE}{name}.\n{GREEN}You've been demoted to member",
  "GOT_RANK_TRANSFERRED": "{BOLD}{WHITE}{name} {GREEN}transferred the ownership of your island!",
  "PLAYER_INVITATION_DENIED": "{WHITE}{name} {YELLOW}denied the invitation to join the island",
  "ISLAND_CATEGORY": "{GREEN}Your island has been categorized as {WHITE}{category}.\n{GREEN}Make it bigger to improve your category!",
  "ISLAND_IS_FULL_BUT_YOU_CAN_UPGRADE": "{YELLOW}You can't invite nobody else to your island because it's full!\n{GRAY}* You can get more slots increasing your island size to {WHITE}{next}",
  "ISLAND_IS_FULL": "{YELLOW}You can't invite nobody else to your island because it's full!",
  "ISLAND_BLOCKS": "{GREEN}Your island's team has placed {WHITE}{amount} {GREEN}blocks",
  "BLOCKS_USAGE": "Usage: /is blocks",
  "BLOCKS_DESCRIPTION": "Shows the amount of blocks built by your island's team",
  "CATEGORY_USAGE": "Usage: /is category",
  "CATEGORY_DESCRIPTION": "Shows your island's category",
  "INVITATION_REFUSED": "{GREEN}You refused an invitation!",
  "ALREADY_ON_YOUR_ISLAND": "{YELLOW}{name} is already a member of your island!",
  "ALREADY_A_COOPERATOR": "{YELLOW}{name} is already a cooperator!",
  "ADDED_A_COOPERATOR": "{WHITE}{name} {GREEN}now can cooperate with you on your island",
  "NOW_YOU_CAN_COOPERATE": "{WHITE}{name} {GREEN}gave you permission to cooperate in his island!",
  "REMOVED_A_COOPERATOR": "{WHITE}{name} {GREEN}is no longer a cooperator!",
  "NOW_YOU_CANNOT_COOPERATE": "{WHITE}{name} {GREEN}revoked you the permission to cooperate in his island!",
  "COOPERATE_USAGE": "{WHITE}Usage: /is cooperate <player>",
  "COOPERATE_DESCRIPTION": "Allows another player to interact with your island",
  "YOU_HAVE_TO_WAIT": "{YELLOW}To create another island you have to wait {WHITE}{minutes} {YELLOW}minutes!",
  "BLOCKED_COMMAND": "{YELLOW}That command is not allowed in the islands!"
}
{
  "default-chest": ["325,8,2", "325,10,1", "79,0,2", "360", "352,0,12", "361", "81", "338", "297", "296", "298", "299", "300",
    "301"],
  "chest-per-generator": {
  },
  "slots-by-size": {
    "XS": 2,
    "S": 5,
    "M": 10,
    "L": 15,
    "XL": 20
  },
  "cooldown-duration-minutes": 20,
  "prevent-void-damage": true,
  "commands-blocked-in-isles": [
    "sethome",
    "home"
  ]
}